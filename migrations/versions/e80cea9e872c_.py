"""empty message

Revision ID: e80cea9e872c
Revises: 
Create Date: 2025-09-29 07:49:15.351641

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e80cea9e872c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Contact',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('company', sa.Text(), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('subject', sa.Text(), nullable=True),
    sa.Column('message', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('cif', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cif')
    )
    op.create_table('salary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('salary_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['salary_id'], ['salary.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shift_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('color_hex', sa.String(length=7), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_id', 'code', name='uq_shift_type_company_code')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('dni', sa.String(length=255), nullable=False),
    sa.Column('birth', sa.Date(), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('seniority', sa.Date(), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('image', sa.Text(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dni'),
    sa.UniqueConstraint('email')
    )
    op.create_table('holidays',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'CANCELLED', name='holiday_status'), nullable=False),
    sa.Column('approved_user_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('requested_days', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.CheckConstraint('requested_days >= 0', name='ck_holidays_req_nonneg'),
    sa.CheckConstraint('start_date <= end_date', name='ck_holidays_start_le_end'),
    sa.ForeignKeyConstraint(['approved_user_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('holidays', schema=None) as batch_op:
        batch_op.create_index('ix_holidays_company_emp_start', ['company_id', 'employee_id', 'start_date'], unique=False)
        batch_op.create_index('ix_holidays_emp_start', ['employee_id', 'start_date'], unique=False)

    op.create_table('payroll',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('period_year', sa.Integer(), nullable=False),
    sa.Column('period_month', sa.Integer(), nullable=False),
    sa.Column('cloudinary_public_id', sa.String(length=255), nullable=True),
    sa.Column('cloudinary_version', sa.String(length=50), nullable=True),
    sa.Column('cloudinary_resource_type', sa.String(length=20), nullable=True),
    sa.Column('cloudinary_secure_url', sa.String(length=500), nullable=True),
    sa.Column('cloudinary_bytes', sa.Integer(), nullable=True),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shift_series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('weekdays_mask', sa.Integer(), nullable=False),
    sa.Column('interval_weeks', sa.Integer(), nullable=False),
    sa.Column('tz_name', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['shift_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('shift_series', schema=None) as batch_op:
        batch_op.create_index('ix_shift_series_company_emp', ['company_id', 'employee_id'], unique=False)

    op.create_table('shifts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['shift_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('shifts', schema=None) as batch_op:
        batch_op.create_index('ix_shift_company_emp_date', ['company_id', 'employee_id', 'date'], unique=False)

    op.create_table('suggestions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('time_punch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('punch_type', sa.Enum('IN', 'BREAK_START', 'BREAK_END', 'OUT', name='punch_type', native_enum=False), nullable=False),
    sa.Column('punched_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('time_punch', schema=None) as batch_op:
        batch_op.create_index('ix_time_punch_employee_time', ['employee_id', 'punched_at'], unique=False)

    op.create_table('vacation_balance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('allocated_days', sa.Integer(), nullable=False),
    sa.Column('used_days', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('allocated_days >= 0', name='ck_balance_alloc_nonneg'),
    sa.CheckConstraint('used_days >= 0', name='ck_balance_used_nonneg'),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vacation_balance', schema=None) as batch_op:
        batch_op.create_index('ix_balance_company_emp_year', ['company_id', 'employee_id', 'year'], unique=False)
        batch_op.create_index('ix_balance_emp_year', ['employee_id', 'year'], unique=True)

    op.create_table('shift_exception',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('action', sa.String(length=10), nullable=False),
    sa.Column('new_start_time', sa.Time(), nullable=True),
    sa.Column('new_end_time', sa.Time(), nullable=True),
    sa.Column('new_type_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['new_type_id'], ['shift_type.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['shift_series.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('series_id', 'date', name='uq_shift_exception_series_date')
    )
    with op.batch_alter_table('shift_exception', schema=None) as batch_op:
        batch_op.create_index('ix_shift_exception_series_date', ['series_id', 'date'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('shift_exception', schema=None) as batch_op:
        batch_op.drop_index('ix_shift_exception_series_date')

    op.drop_table('shift_exception')
    with op.batch_alter_table('vacation_balance', schema=None) as batch_op:
        batch_op.drop_index('ix_balance_emp_year')
        batch_op.drop_index('ix_balance_company_emp_year')

    op.drop_table('vacation_balance')
    with op.batch_alter_table('time_punch', schema=None) as batch_op:
        batch_op.drop_index('ix_time_punch_employee_time')

    op.drop_table('time_punch')
    op.drop_table('suggestions')
    with op.batch_alter_table('shifts', schema=None) as batch_op:
        batch_op.drop_index('ix_shift_company_emp_date')

    op.drop_table('shifts')
    with op.batch_alter_table('shift_series', schema=None) as batch_op:
        batch_op.drop_index('ix_shift_series_company_emp')

    op.drop_table('shift_series')
    op.drop_table('payroll')
    with op.batch_alter_table('holidays', schema=None) as batch_op:
        batch_op.drop_index('ix_holidays_emp_start')
        batch_op.drop_index('ix_holidays_company_emp_start')

    op.drop_table('holidays')
    op.drop_table('employee')
    op.drop_table('shift_type')
    op.drop_table('role')
    op.drop_table('salary')
    op.drop_table('company')
    op.drop_table('Contact')
    # ### end Alembic commands ###
